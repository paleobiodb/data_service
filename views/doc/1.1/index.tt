The following services are obsolete and are retained only for compatibility with older applications: L<version 1.0|/data1.0/>.

=head2 DESCRIPTION

The function of this data service is to provide programmatic access to the
information stored in the Paleobiology Database. Our goal is to make the
entire database accessible by means of this service, so that anyone can write
client software that interacts with it.

=head2 SCOPE

This service currently provides access to the following classes of
information, by means of the indicated URLs. The following links will take you
to pages which document the individual URL paths, listing the parameters
accepted and the data fields returned by each.

=over 4

=for pp_table_header Class* | Documentation | Description

=item Fossil Collections | L</data1.1/colls/>

A fossil collection is somewhat loosely defined as a set of fossils collected
by a single person from a single site.  Each collection has a geographic
location, stratigraphic context, and age estimate.

=item Fossil Occurrences | L</data1.1/occs/>

A fossil occurence represents the occurrence of a particular organism at a 
particular location in time and space.  Each occurrence is tied to a single collection,
and has a taxonomic identification which may be more or less specific.

=item Taxonomic names | L</data1.1/taxa/>

The taxonomic names stored in the database are arranged hierarchically.  Our
tree of life is quite complete down to the class level, and reasonably
complete down to the suborder level.  Below that, coverage varies.  Many parts
of the tree have been completely entered, while others are sparser.

=item Geologic time intervals | L</data1.1/intervals/>

The international standard geologic time intervals are included with their
start and end dates as listed in the 
L<GSA Geologic Time Scale|http://www.geosociety.org/science/timescale/> 
(version 4.0/2012).  Many other named intervals are included as well.

=item Configuration | L</data1.1/config|/data1.1/config_doc.html>

This class provides information about the structure, encoding and organization
of the information in the database.  It is designed to enable the easy configuration
of client applications.

=back

For now, this service provides read-only access to the publicly
available parts of the data. In the future, we plan to add an
authentication module which will accept login credentials and will
allow access to protected data, addition of new data, and modification
of existing data.

=head2 USAGE

You can access this service by making HTTP requests whose URLs conform
to a simple scheme. For example, consider the following URL:

    /data1.1/taxa/single.json?name=Dascillidae&show=attr

An HTTP GET request using this URL would return information about the taxon 'Dascillidae' (soft-bodied plant beetles). The components of this URL are as follows:

=over 4

=item /data1.1/taxa/single

The URL path indicates the operation to be carried out. For a GET
request, it specifies the class of information to be retrieved.

=item json

The path suffix indicates the format in which the results will be
returned. In this case, the result will be expressed in Javascript
Object Notation.

=item name=Dascillidae

Some of the parameters are used to construct a database query that
will retrieve the desired information. This one selects a particular
taxonomic name.

=item show=attr

Other parameters change or augment the set of information
returned. This one specifies that in addition to basic information
about the taxonomic name the result should also include the name's
attribution.

=back

Each URL path accepts its own set of parameters as well as a set of L<common parameters|/data1.1/common_doc.html>
that control the form of the result.

For now, the only HTTP requests that are accepted are GET requests. Once we allow authentication and data modification, these operations will be carried out by means of POST, PUT and DELETE requests.

=head2 FORMATS

By using the appropriate suffix, you can choose to retrieve any of the available information in any of the available formats:

=over 4

=for pp_table_header Format | Suffix | Documentation | Description

=item JSON | C<json> | L<JSON response|/data1.1/json_doc.html>

L<Javascript Object Notation|http://en.wikipedia.org/wiki/Json> (JSON) is the most commonly used format for
data communication on the Web. Our JSON responses use short
(3-character) field names in order to minimize the amount of data
returned.

=item XML | C<xml> | L<XML response|/data1.1/xml_doc.html>

Our XML responses use L<Darwin Core|http://www.tdwg.org/standards/450/> element names. 
Unfortunately, many of our data fields have no counterpart in the Darawin Core element set and
thus cannot be included in responses of this type.

=item tab-separated text | C<tsv> C<txt> | L<Text response|/data1.1/text_doc.html>

This format produces files that are very similar to the download files
from the classic PBDB. The same field names are used, so that you can
compare results with previous PBDB downloads and use the same analysis
tools. Results in this format can be easily loaded into most
spreadsheet software for futher processing and analysis.

=item comma-separated text | C<csv> | L<Text response|/data1.1/text_doc.html>

This format is identical to the tab-separated format, but with fields
quoted and separated by commas. It can be similarly loaded into most
spreadsheet software.

=back

If an error occurs, the response body will be a L<JSON object|/data1.1/json_doc.html> if the URL path suffix is C<json>
and HTML otherwise.  If the URL path suffix is not recognized, an error of type C<415 Unknown Media Type> will be returned.

