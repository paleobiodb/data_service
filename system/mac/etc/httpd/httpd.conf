####
#### httpd.conf -- Apache HTTP server configuration file
####
#### This httpd.conf differs significantly from the httpd.conf distributed
#### with Apache and the httpd.conf present on Mac OS X. It has been
#### modified heavily for Mac OS X Server.
####
#### To make Apache configuration changes:
####    Use Mac OS X Server's Server Settings application where possible; it will
####       update the contents of httpd_macosxserver.conf.
####    Otherwise:
####       Make global configuration changes in this file
####       Make virtual-host-specific configuration changes in
####         httpd_macosxserver.conf, adhering to guidelines shown at the
####         top of that file to avoid interference with the Server Settings app.
####
#### This is based on Apache 1.3.26 version of httpd.conf-dist
####
#
# Based loosely upon the NCSA server configuration files originally by Rob McCool.
#
# This is the main Apache server configuration file.  It contains the
# configuration directives that give the server its instructions.
# See <URL:http://www.apache.org/docs/> for detailed information about
# the directives.
#
# Do NOT simply read the instructions in here without understanding
# what they do.  They're here only as hints or reminders.  If you are unsure
# consult the online docs. You have been warned.  
#
# After this file is processed, the server will look for and process
# /usr/conf/srm.conf and then /usr/conf/access.conf
# unless you have overridden these with ResourceConfig and/or
# AccessConfig directives here.
#
# The configuration directives are grouped into three basic sections:
#  1. Directives that control the operation of the Apache server process as a
#     whole (the 'global environment').
#  2. Directives that define the parameters of the 'main' or 'default' server,
#     which responds to requests that aren't handled by a virtual host.
#     These directives also provide default values for the settings
#     of all virtual hosts.
#  3. Settings for virtual hosts, which allow Web requests to be sent to
#     different IP addresses or hostnames and have them handled by the
#     same Apache server process.
#
# Configuration and logfile names: If the filenames you specify for many
# of the server's control files begin with "/" (or "drive:/" for Win32), the
# server will use that explicit path.  If the filenames do *not* begin
# with "/", the value of ServerRoot is prepended -- so "logs/foo.log"
# with ServerRoot set to "/usr/local/apache" will be interpreted by the
# server as "/usr/local/apache/logs/foo.log".
#

### Section 1: Global Environment
#
# The directives in this section affect the overall operation of Apache,
# such as the number of concurrent requests it can handle or where it
# can find its configuration files.
#
#
# ServerType is either inetd, or standalone.  Inetd mode is only supported on
# Unix platforms.
#
#### For Mac OS X Server: Changing this is not recommended.
#
ServerType standalone

#
# ServerRoot: The top of the directory tree under which the server's
# configuration, error, and log files are kept.
#
# NOTE!  If you intend to place this on an NFS (or otherwise network)
# mounted filesystem then please read the LockFile documentation
# (available at <URL:http://www.apache.org/docs/mod/core.html#lockfile>);
# you will save yourself a lot of trouble.
#
# Do NOT add a slash at the end of the directory path.
#
#### For Mac OS X Server: Changing this is not recommended.
#
ServerRoot "/Library/WebServer"

#
# The LockFile directive sets the path to the lockfile used when Apache
# is compiled with either USE_FCNTL_SERIALIZED_ACCEPT or
# USE_FLOCK_SERIALIZED_ACCEPT. This directive should normally be left at
# its default value. The main reason for changing it is if the logs
# directory is NFS mounted, since the lockfile MUST BE STORED ON A LOCAL
# DISK. The PID of the main server process is automatically appended to
# the filename. 
# 
#### For Mac OS X Server: It's OK to change this if necessary.
#
#LockFile /private/var/run/accept.lock

#
# PidFile: The file in which the server should record its process
# identification number when it starts.
#
#### For Mac OS X Server: Changing this is not recommended.
#
PidFile /private/var/run/httpd.pid

#
# ScoreBoardFile: File used to store internal server process information.
# Not all architectures require this.  But if yours does (you'll know because
# this file will be  created when you run Apache) then you *must* ensure that
# no two invocations of Apache share the same scoreboard file.
#
#### For Mac OS X Server: This is not applicable.
#
ScoreBoardFile "/private/var/run/apache_runtime_status"
#
# In the standard configuration, the server will process httpd.conf (this 
# file, specified by the -f command line option), srm.conf, and access.conf 
# in that order.  The latter two files are now distributed empty, as it is 
# recommended that all directives be kept in a single file for simplicity.  
# The commented-out values below are the built-in defaults.  You can have the 
# server ignore these files altogether by using "/dev/null" (for Unix) or
# "nul" (for Win32) for the arguments to the directives.
#
#
#### For Mac OS X Server: If you rely on srm.conf and access.conf, you can
#### change the settings, but be sure it does not interfere with the
#### directives in httpd_macosxserver.conf.
#
#ResourceConfig conf/srm.conf
#AccessConfig conf/access.conf

#
# Timeout: The number of seconds before receives and sends time out.
#
#### For Mac OS X Server: Any Timeout directive here will be overridden by the
#### setting in httpd_macosxserver.conf.
#
#Timeout 300

#
# KeepAlive: Whether or not to allow persistent connections (more than
# one request per connection). Set to "Off" to deactivate.
#
#### For Mac OS X Server: Any KeepAlive directive here will be overridden by the
#### setting in httpd_macosxserver.conf.
#
#KeepAlive On

#
# MaxKeepAliveRequests: The maximum number of requests to allow
# during a persistent connection. Set to 0 to allow an unlimited amount.
# We recommend you leave this number high, for maximum performance.
#
#### For Mac OS X Server: Any MaxKeepAliveRequests directive here will be
#### overridden by the setting in httpd_macosxserver.conf.
#
#MaxKeepAliveRequests 100

#
# KeepAliveTimeout: Number of seconds to wait for the next request from the
# same client on the same connection.
#
#### For Mac OS X Server: Any KeepAliveTimeout directive here will be overridden
#### by the setting in httpd_macosxserver.conf.
#
#KeepAliveTimeout 15

#
# Server-pool size regulation.  Rather than making you guess how many
# server processes you need, Apache dynamically adapts to the load it
# sees --- that is, it tries to maintain enough server processes to
# handle the current load, plus a few spare servers to handle transient
# load spikes (e.g., multiple simultaneous requests from a single
# Netscape browser).
#
# It does this by periodically checking how many servers are waiting
# for a request.  If there are fewer than MinSpareServers, it creates
# a new spare.  If there are more than MaxSpareServers, some of the
# spares die off.  The default values are probably OK for most sites.
#
#### For Mac OS X Server: It's OK to adjust these as necessary.
#
MinSpareServers 1
MaxSpareServers 5

#
# Number of servers to start initially --- should be a reasonable ballpark
# figure.
#
#### For Mac OS X Server: It's OK to adjust this as necessary.
#
StartServers 5

#
# Limit on total number of servers running, i.e., limit on the number
# of clients who can simultaneously connect --- if this limit is ever
# reached, clients will be LOCKED OUT, so it should NOT BE SET TOO LOW.
# It is intended mainly as a brake to keep a runaway server from taking
# the system with it as it spirals down...
#
#### For Mac OS X Server: Any MaxClients directive here will be overridden
#### by the setting in httpd_macosxserver.conf.
#
#MaxClients 150

#
# MaxRequestsPerChild: the number of requests each child process is
# allowed to process before the child dies.  The child will exit so
# as to avoid problems after prolonged use when Apache (and maybe the
# libraries it uses) leak memory or other resources.  On most systems, this
# isn't really needed, but a few (such as Solaris) do have notable leaks
# in the libraries. For these platforms, set to something like 10000
# or so; a setting of 0 means unlimited.
#
# NOTE: This value does not include keepalive requests after the initial
#       request per connection. For example, if a child process handles
#       an initial request and 10 subsequent "keptalive" requests, it
#       would only count as 1 request towards this limit.
#
#### For Mac OS X Server: It's OK to adjust this as necessary.
#
MaxRequestsPerChild 10000

#
# Listen: Allows you to bind Apache to specific IP addresses and/or
# ports, in addition to the default. See also the <VirtualHost>
# directive.
#
#### For Mac OS X Server: Any Listen directive here will be overridden by the
#### setting in httpd_macosxserver.conf.
#
#Listen 3000
#Listen 12.34.56.78:80

#
# BindAddress: You can support virtual hosts with this option. This directive
# is used to tell the server which IP address to listen to. It can either
# contain "*", an IP address, or a fully qualified Internet domain name.
# See also the <VirtualHost> and Listen directives.
#
#### For Mac OS X Server: Any BindAddress directive here will be overridden by
#### the VirtualHost directives in httpd_macosxserver.conf.
#
#BindAddress *

#
# Dynamic Shared Object (DSO) Support
#
# To be able to use the functionality of a module which was built as a DSO you
# have to place corresponding `LoadModule' lines at this location so the
# directives contained in it are actually available _before_ they are used.
# Please read the file http://httpd.apache.org/docs/dso.html for more
# details about the DSO mechanism and run `httpd -l' for the list of already
# built-in (statically linked and thus always available) modules in your httpd
# binary.
#
# Note: The order is which modules are loaded is important.  Don't change
# the order below without expert advice.
#
# Example:
# LoadModule foo_module libexec/mod_foo.so
#
#### For Mac OS X Server: It's OK to adjust these as necessary, except for
#### the modules that are enabled on a per-virtual-host basis in
#### the httpd_macosxserver.conf file by the Server Settings app (noted below).
#
#LoadModule vhost_alias_module    /usr/libexec/httpd/mod_vhost_alias.so
LoadModule env_module            /usr/libexec/httpd/mod_env.so
LoadModule config_log_module      /usr/libexec/httpd/mod_log_config.so
#LoadModule mime_magic_module     /usr/libexec/httpd/mod_mime_magic.so
LoadModule mime_module            /usr/libexec/httpd/mod_mime.so
#LoadModule negotiation_module     /usr/libexec/httpd/mod_negotiation.so
LoadModule status_module          /usr/libexec/httpd/mod_status.so
LoadModule info_module            /usr/libexec/httpd/mod_info.so
LoadModule includes_module        /usr/libexec/httpd/mod_include.so
LoadModule autoindex_module       /usr/libexec/httpd/mod_autoindex.so
LoadModule dir_module             /usr/libexec/httpd/mod_dir.so
LoadModule cgi_module             /usr/libexec/httpd/mod_cgi.so
LoadModule asis_module            /usr/libexec/httpd/mod_asis.so
#LoadModule imap_module            /usr/libexec/httpd/mod_imap.so
LoadModule action_module          /usr/libexec/httpd/mod_actions.so
#LoadModule speling_module        /usr/libexec/httpd/mod_speling.so
LoadModule userdir_module         /usr/libexec/httpd/mod_userdir.so
LoadModule alias_module           /usr/libexec/httpd/mod_alias.so
#LoadModule rewrite_module         /usr/libexec/httpd/mod_rewrite.so
LoadModule access_module          /usr/libexec/httpd/mod_access.so
LoadModule apple_auth_module      /usr/libexec/httpd/mod_auth_apple.so
#LoadModule anon_auth_module      /usr/libexec/httpd/mod_auth_anon.so
#LoadModule dbm_auth_module       /usr/libexec/httpd/mod_auth_dbm.so
#LoadModule digest_module         /usr/libexec/httpd/mod_digest.so
#LoadModule proxy_module           /usr/libexec/httpd/libproxy.so
#LoadModule cern_meta_module      /usr/libexec/httpd/mod_cern_meta.so
#LoadModule expires_module         /usr/libexec/httpd/mod_expires.so
#LoadModule headers_module        /usr/libexec/httpd/mod_headers.so
#LoadModule usertrack_module      /usr/libexec/httpd/mod_usertrack.so
#LoadModule unique_id_module      /usr/libexec/httpd/mod_unique_id.so
LoadModule setenvif_module        /usr/libexec/httpd/mod_setenvif.so
#
#### For Mac OS X Server: Don't enable dav_module, ssl_module or jserv_module
#### here, as these are enabled on a per-virtual-host basis in
#### the httpd_macosxserver.conf file by the Server Settings app.
#
#LoadModule dav_module            /usr/libexec/httpd/libdav.so
#LoadModule ssl_module            /usr/libexec/httpd/libssl.so
#
LoadModule apple_macbinary_module /usr/libexec/httpd/mod_macbinary_apple.so
LoadModule apple_sherlock_module  /usr/libexec/httpd/mod_sherlock_apple.so
LoadModule perl_module           /usr/libexec/httpd/libperl.so
#
#### For Mac OS X Server: To enable WebMail, or any other php functions,
#### uncomment the directive below and also the corresponding AddModule
#### directive further below.
#
LoadModule php4_module           /usr/libexec/httpd/libphp4.so 

#  Reconstruction of the complete module list from all available modules
#  (static and shared ones) to achieve correct module execution order.
#  [WHENEVER YOU CHANGE THE LOADMODULE SECTION ABOVE UPDATE THIS, TOO]
ClearModuleList
#AddModule mod_vhost_alias.c
AddModule mod_env.c
AddModule mod_log_config.c
#AddModule mod_mime_magic.c
AddModule mod_mime.c
#AddModule mod_negotiation.c
AddModule mod_status.c
AddModule mod_info.c
AddModule mod_include.c
AddModule mod_autoindex.c
AddModule mod_dir.c
AddModule mod_cgi.c
AddModule mod_asis.c
#AddModule mod_imap.c
AddModule mod_actions.c
#AddModule mod_speling.c
AddModule mod_userdir.c
AddModule mod_alias.c
#AddModule mod_rewrite.c
AddModule mod_access.c
AddModule mod_auth_apple.c
#AddModule mod_auth_anon.c
#AddModule mod_auth_dbm.c
#AddModule mod_digest.c
#AddModule mod_proxy.c
#AddModule mod_cern_meta.c
#AddModule mod_expires.c
#AddModule mod_headers.c
#AddModule mod_usertrack.c
#AddModule mod_unique_id.c
AddModule mod_so.c
AddModule mod_setenvif.c
#
#### For Mac OS X Server: Don't enable dav_module, ssl_module or jserv_module
#### here, as these are enabled on a per-virtual-host basis in
#### the httpd_macosxserver.conf file by the Server Settings app.
#
#AddModule mod_dav.c
#AddModule mod_ssl.c
#
AddModule mod_macbinary_apple.c
AddModule mod_sherlock_apple.c
AddModule mod_perl.c
#
#### For Mac OS X Server: To enable WebMail, or any other php functions,
#### uncomment the directive below and also the corresponding LoadModule
#### directive above.
#
AddModule mod_php4.c 

#
# ExtendedStatus controls whether Apache will generate "full" status
# information (ExtendedStatus On) or just basic information (ExtendedStatus
# Off) when the "server-status" handler is called. The default is Off.
#
#### For Mac OS X Server: Any ExtendedStatus directive here will be overridden
#### by the setting in httpd_macosxserver.conf.
#
#ExtendedStatus On

### Section 2: 'Main' server configuration
#
# The directives in this section set up the values used by the 'main'
# server, which responds to any requests that aren't handled by a
# <VirtualHost> definition.  These values also provide defaults for
# any <VirtualHost> containers you may define later in the file.
#
# All of these directives may appear inside <VirtualHost> containers,
# in which case these default settings will be overridden for the
# virtual host being defined.
#
#### For Mac OS X Server: There is no 'main' server, all serving is done 
#### within vitual hosts. So all the settings in this section are overridden
#### by settings in httpd_macosxserver.conf. 
#

# ENVIRONMENT VARIABLES

# general
SetEnv DOCUMENT_ROOT "/Volumes/pbdb_RAID/httpdocs/html"
SetEnv PRIMARY_HOST "paleodb.org"


# admin.pl
SetEnv ADMIN_TEMPLATE_DIR "/Volumes/pbdb_RAID/httpdocs/html/admin"

# bridge.pl
SetEnv BRIDGE_HOST_URL "http://paleodb.org"
SetEnv BRIDGE_HTML_DIR "/Volumes/pbdb_RAID/httpdocs/html"

# Curve.pm
SetEnv CURVE_PUBLIC_DIR "/Volumes/pbdb_RAID/httpdocs/html/public/data"
SetEnv CURVE_HOST "paleodb.org"

# Download.pm
SetEnv DOWNLOAD_OUTFILE_DIR "/Volumes/pbdb_RAID/httpdocs/html/paleodb/data"
SetEnv DOWNLOAD_DATAFILE_DIR "/Volumes/pbdb_RAID/httpdocs/cgi-bin/data"

# Map.pm
SetEnv MAP_COAST_DIR "/Volumes/pbdb_RAID/httpdocs/cgi-bin/data"
SetEnv MAP_GIF_DIR "/Volumes/pbdb_RAID/httpdocs/html/public/maps"

# Report.pm
SetEnv REPORT_DDIR "/Volumes/pbdb_RAID/httpdocs/cgi-bin/data"
SetEnv REPORT_DDIR2 "/Volumes/pbdb_RAID/httpdocs/html/public/data"

# PHP global variables switch
php_value register_globals 0

#
# If your ServerType directive (set earlier in the 'Global Environment'
# section) is set to "inetd", the next few directives don't have any
# effect since their settings are defined by the inetd configuration.
# Skip ahead to the ServerAdmin directive.
#

#
# Port: The port to which the standalone server listens. For
# ports < 1023, you will need httpd to be run as root initially.
#
#### For Mac OS X Server: Any Port directive here will be overridden by the
#### setting in the virtual hosts in httpd_macosxserver.conf.
#
#Port 80

#
# If you wish httpd to run as a different user or group, you must run
# httpd as root initially and it will switch.  
#
# User/Group: The name (or #number) of the user/group to run httpd as.
#  . On SCO (ODT 3) use "User nouser" and "Group nogroup".
#  . On HPUX you may not be able to use shared memory as nobody, and the
#    suggested workaround is to create a user www and use that user.
#  NOTE that some kernels refuse to setgid(Group) or semctl(IPC_SET)
#  when the value of (unsigned)Group is above 60000; 
#  don't use Group "#-1" on these systems!
#
#### For Mac OS X Server: It's OK to modify this directive if necessary, but 
#### running the server as user www and group www is recommended.
#
User www
Group www

#
# ServerAdmin: Your address, where problems with the server should be
# e-mailed.  This address appears on some server-generated pages, such
# as error documents.
#
#### For Mac OS X Server: Any ServerAdmin directive here will be overridden
#### by the setting in the virtual hosts in httpd_macosxserver.conf.
#
#ServerAdmin webmaster@example.com

#
# ServerName allows you to set a host name which is sent back to clients for
# your server if it's different than the one the program would get (i.e., use
# "www" instead of the host's real name).
#
# Note: You cannot just invent host names and hope they work. The name you 
# define here must be a valid DNS name for your host. If you don't understand
# this, ask your network administrator.
# If your host doesn't have a registered DNS name, enter its IP address here.
# You will have to access it by its address (e.g., http://123.45.67.89/)
# anyway, and this will make redirections work in a sensible way.
#
# 127.0.0.1 is the TCP/IP local loop-back address, often named localhost. Your 
# machine always knows itself by this address. If you use Apache strictly for 
# local testing and development, you may use 127.0.0.1 as the server name.
#
#### For Mac OS X Server: Any ServerName directive here will be overridden by
#### the setting in the virtual hosts in httpd_macosxserver.conf.
#
#ServerName new.host.name

#
# DocumentRoot: The directory out of which you will serve your
# documents. By default, all requests are taken from this directory, but
# symbolic links and aliases may be used to point to other locations.
#
#### For Mac OS X Server: Any DocumentRoot directive here will be overridden
#### by the setting in the virtual hosts in httpd_macosxserver.conf.
#
DocumentRoot "/Library/WebServer/Documents"

#
# Each directory to which Apache has access, can be configured with respect
# to which services and features are allowed and/or disabled in that
# directory (and its subdirectories). 
#
# First, we configure the "default" to be a very restrictive set of 
# permissions.  
#
<Directory />
    Options FollowSymLinks
    AllowOverride None
</Directory>

#
# Note that from this point forward you must specifically allow
# particular features to be enabled - so if something's not working as
# you might expect, make sure that you have specifically enabled it
# below.
#

#
# This should be changed to whatever you set DocumentRoot to.
#
#### For Mac OS X Server: Any directives in this directory block will be 
#### overridden by the ones in the virtual hosts in httpd_macosxserver.conf.
#
#<Directory "/Library/WebServer/Documents">

#
# This may also be "None", "All", or any combination of "Indexes",
# "Includes", "FollowSymLinks", "ExecCGI", or "MultiViews".
#
# Note that "MultiViews" must be named *explicitly* --- "Options All"
# doesn't give it to you.
#
#    Options Indexes FollowSymLinks MultiViews

#
# This controls which options the .htaccess files in directories can
# override. Can also be "All", or any combination of "Options", "FileInfo", 
# "AuthConfig", and "Limit"
#
#    AllowOverride None

#
# Controls who can get stuff from this server.
#
#    Order allow,deny
#    Allow from all
#</Directory>

#
# UserDir: The name of the directory which is appended onto a user's home
# directory if a ~user request is received.
#
#### For Mac OS X Server: It's OK to modify this directive if necessary, but note that
#### the default sites directory created for a new user is "Sites", and that
#### personal websharing is not supported on Mac OS X Server.
#
<IfModule mod_userdir.c>
    UserDir Sites
</IfModule>

#
# Control access to UserDir directories.  The following is an example
# for a site where these directories are restricted to read-only.
#
#### For Mac OS X Server: This example is not applicable
#
#<Directory /home/*/public_html>
#    AllowOverride FileInfo AuthConfig Limit
#    Options MultiViews Indexes SymLinksIfOwnerMatch IncludesNoExec
#    <Limit GET POST OPTIONS PROPFIND>
#        Order allow,deny
#        Allow from all
#    </Limit>
#    <LimitExcept GET POST OPTIONS PROPFIND>
#        Order deny,allow
#        Deny from all
#    </LimitExcept>
#</Directory>

#
# DirectoryIndex: Name of the file or files to use as a pre-written HTML
# directory index.  Separate multiple entries with spaces.
#
#### For Mac OS X Server: Any DirectoryIndex directive here will be overridden
#### by the setting in the virtual hosts in httpd_macosxserver.conf.
#
<IfModule mod_dir.c>
    DirectoryIndex index.php index.html
</IfModule>

#
# AccessFileName: The name of the file to look for in each directory
# for access control information.
#
#### For Mac OS X Server: It's OK to modify this directive if necessary but note that
#### by default AllowOveride is None in all virtual hosts.
#
AccessFileName .htaccess

#
# The following lines prevent .htaccess files from being viewed by
# Web clients.  Since .htaccess files often contain authorization
# information, access is disallowed for security reasons.  Comment
# these lines out if you want Web visitors to see the contents of
# .htaccess files.  If you change the AccessFileName directive above,
# be sure to make the corresponding changes here.
#
# Also, folks tend to use names such as .htpasswd for password
# files, so this will protect those as well.
#
#### For Mac OS X Server: Note the method used to deny access to these
#### files so that files on case-insensitive HFS+ volumes are protected. 
#### Also note that .DS_Store files created by the Finder are denied here.
#### (Consider adding .FBCIndex files)
#### (Note: Denying .DS_S* may interfere with Finder WebDAV operation)
#
<Files ~ "^\.([Hh][Tt]|[Dd][Ss]_[Ss])">
    Order allow,deny
    Deny from all
    Satisfy All
</Files>

<Files "rsrc"> 
    Order allow,deny
    Deny from all
    Satisfy All
</Files>

<DirectoryMatch ".*\.\.namedfork">
    Order allow,deny
    Deny from all
    Satisfy All
</DirectoryMatch>


#
# CacheNegotiatedDocs: By default, Apache sends "Pragma: no-cache" with each
# document that was negotiated on the basis of content. This asks proxy
# servers not to cache the document. Uncommenting the following line disables
# this behavior, and proxies will be allowed to cache the documents.
#
#### For Mac OS X Server: It's OK to modify this directive if necessary
#
#CacheNegotiatedDocs

#
# UseCanonicalName:  (new for 1.3)  With this setting turned on, whenever
# Apache needs to construct a self-referencing URL (a URL that refers back
# to the server the response is coming from) it will use ServerName and
# Port to form a "canonical" name.  With this setting off, Apache will
# use the hostname:port that the client supplied, when possible.  This
# also affects SERVER_NAME and SERVER_PORT in CGI scripts.
#
#### For Mac OS X Server: It's OK to modify this directive if necessary, but note 
#### interactions with Web Performance Cache
#
UseCanonicalName On

#
# TypesConfig describes where the mime.types file (or equivalent) is
# to be found.
#
#### For Mac OS X Server: It's OK to modify this directive if necessary, but note
#### interactions with mime_macosxerver.types
#
<IfModule mod_mime.c>
    TypesConfig /private/etc/httpd/mime.types
</IfModule>

#
# DefaultType is the default MIME type the server will use for a document
# if it cannot otherwise determine one, such as from filename extensions.
# If your server contains mostly text or HTML documents, "text/plain" is
# a good value.  If most of your content is binary, such as applications
# or images, you may want to use "application/octet-stream" instead to
# keep browsers from trying to display binary files as though they are
# text.
#
#### For Mac OS X Server: It's OK to modify this directive if necessary.
#
DefaultType text/plain

#
# The mod_mime_magic module allows the server to use various hints from the
# contents of the file itself to determine its type.  The MIMEMagicFile
# directive tells the module where the hint definitions are located.
# mod_mime_magic is not part of the default server (you have to add
# it yourself with a LoadModule [see the DSO paragraph in the 'Global
# Environment' section], or recompile the server and include mod_mime_magic
# as part of the configuration), so it's enclosed in an <IfModule> container.
# This means that the MIMEMagicFile directive will only be processed if the
# module is part of the server.
#
#### For Mac OS X Server: It's OK to modify this directive if necessary.
#
<IfModule mod_mime_magic.c>
    MIMEMagicFile /private/etc/httpd/magic
</IfModule>

#
# HostnameLookups: Log the names of clients or just their IP addresses
# e.g., www.apache.org (on) or 204.62.129.132 (off).
# The default is off because it'd be overall better for the net if people
# had to knowingly turn this feature on, since enabling it means that
# each client request will result in AT LEAST one lookup request to the
# nameserver.
#
#### For Mac OS X Server: It's OK to modify this directive if necessary.
#
HostnameLookups Off

#
# ErrorLog: The location of the error log file.
# If you do not specify an ErrorLog directive within a <VirtualHost>
# container, error messages relating to that virtual host will be
# logged here.  If you *do* define an error logfile for a <VirtualHost>
# container, that host's errors will be logged there and not here.
#
#### For Mac OS X Server: Any ErrorLog directive here will be overridden
#### by the settings in httpd_macosxserver.conf.
#
ErrorLog "/private/var/log/httpd/error_log"

#
# LogLevel: Control the number of messages logged to the error_log.
# Possible values include: debug, info, notice, warn, error, crit,
# alert, emerg.
#
#### For Mac OS X Server: It's OK to modify this directive if necessary.
#
LogLevel warn

#
# The following directives define some format nicknames for use with
# a CustomLog directive (see below).
#
#### For Mac OS X Server: It's OK to modify this directive if necessary, but
#### note that you must modify httpd_macosxserver.conf directly if you want to
#### use anything other than the common format.
#

LogFormat "%h %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\"" combined
LogFormat "%h %l %u %t \"%r\" %>s %b" common
LogFormat "%{Referer}i -> %U" referer
LogFormat "%{User-agent}i" agent

#
# The location and format of the access logfile (Common Logfile Format).
# If you do not define any access logfiles within a <VirtualHost>
# container, they will be logged here.  Contrariwise, if you *do*
# define per-<VirtualHost> access logfiles, transactions will be
# logged therein and *not* in this file.
#
#### For Mac OS X Server: It's OK to modify this directive if necessary, but
#### note that you must modify httpd_macosxserver.conf directly if you want to
#### use anything other than the common format.
#
#CustomLog "/private/var/log/httpd/access_log" common

#
# If you would like to have agent and referer logfiles, uncomment the
# following directives.
#
#### For Mac OS X Server: It's OK to modify this directive if necessary, but
#### note that you must modify httpd_macosxserver.conf directly if you want to
#### use anything other than the common format.
#
#CustomLog "/private/var/log/httpd/referer_log" referer
#CustomLog "/private/var/log/httpd/agent_log" agent

#
# If you prefer a single logfile with access, agent, and referer information
# (Combined Logfile Format) you can use the following directive.
#
#### For Mac OS X Server: It's OK to modify this directive if necessary, but
#### note that you must modify httpd_macosxserver.conf directly if you want to
#### use anything other than the common format.
#
#CustomLog "/private/var/log/httpd/access_log" combined

#
# Optionally add a line containing the server version and virtual host
# name to server-generated pages (error documents, FTP directory listings,
# mod_status and mod_info output etc., but not CGI generated documents).
# Set to "EMail" to also include a mailto: link to the ServerAdmin.
# Set to one of:  On | Off | EMail
#
#### For Mac OS X Server: It's OK to modify this directive if necessary.
#
ServerSignature On

# EBCDIC configuration:
#
#### For Mac OS X Server: Not applicable
#
# (only for mainframes using the EBCDIC codeset, currently one of:
# Fujitsu-Siemens' BS2000/OSD, IBM's OS/390 and IBM's TPF)!!
# The following default configuration assumes that "text files"
# are stored in EBCDIC (so that you can operate on them using the
# normal POSIX tools like grep and sort) while "binary files" are
# stored with identical octets as on an ASCII machine.
#
# The directives are evaluated in configuration file order, with
# the EBCDICConvert directives applied before EBCDICConvertByType.
#
# If you want to have ASCII HTML documents and EBCDIC HTML documents
# at the same time, you can use the file extension to force
# conversion off for the ASCII documents:
# > AddType       text/html .ahtml
# > EBCDICConvert Off=InOut .ahtml
#
# EBCDICConvertByType  On=InOut text/* message/* multipart/*
# EBCDICConvertByType  On=In    application/x-www-form-urlencoded
# EBCDICConvertByType  On=InOut application/postscript model/vrml
# EBCDICConvertByType Off=InOut */*


#
# Aliases: Add here as many aliases as you need (with no limit). The format is 
# Alias fakename realname
#
<IfModule mod_alias.c>

    #
    # Note that if you include a trailing / on fakename then the server will
    # require it to be present in the URL.  So "/icons" isn't aliased in this
    # example, only "/icons/".  If the fakename is slash-terminated, then the 
    # realname must also be slash terminated, and if the fakename omits the 
    # trailing slash, the realname must also omit it.
    #
    Alias /icons/ "/usr/share/httpd/icons/"

    <Directory "/usr/share/httpd/icons">
        Options Indexes MultiViews
        AllowOverride None
        Order allow,deny
        Allow from all
    </Directory>

	Alias /paleosource/ "/Volumes/pbdb_RAID/httpdocs/paleosource/"
	Alias /paleosource "/Volumes/pbdb_RAID/httpdocs/paleosource/"
	<Directory "/Volumes/pbdb_RAID/httpdocs/paleosource">
		Options Indexes MultiViews
		AllowOverride None
		Order allow,deny
		Allow from all
	</Directory>

    # This Alias will project the on-line documentation tree under /manual/
    # even if you change the DocumentRoot. Comment it if you don't want to 
    # provide access to the on-line documentation.
    #
    #### For Mac OS X Server: The manual is installed in
    #### /Library/Documentation/Services/apache, and we provide a symlink
    #### in the default DocumentRoot pointing the manual. So there
    #### is no need for this section and we comment it out. If you want to
    #### deny web access to the manual, make appropriate changes below.
    #
    #Alias /manual/ "@@ServerRoot@@/htdocs/manual/"
    #
    #<Directory "@@ServerRoot@@/htdocs/manual">
    #    Options Indexes FollowSymlinks MultiViews
    #    AllowOverride None
    #    Order allow,deny
    #    Allow from all
    #</Directory>

    #
    # ScriptAlias: This controls which directories contain server scripts.
    # ScriptAliases are essentially the same as Aliases, except that
    # documents in the realname directory are treated as applications and
    # run by the server when requested rather than as documents sent to the client.
    # The same rules about trailing "/" apply to ScriptAlias directives as to
    # Alias.
    #
    #### For Mac OS X Server: It's OK to modify this directive if necessary.
    #
    ScriptAlias /cgi-bin/ "/Volumes/pbdb_RAID/httpdocs/cgi-bin/"

    #
    # This should be changed to whatever your ScriptAliased
    # CGI directory exists, if you have that configured.
    #
    #### For Mac OS X Server: It's OK to modify this directive if necessary.
    #
    <Directory "/Volumes/pbdb_RAID/httpdocs/cgi-bin">
        AllowOverride None
        Options None
        Order allow,deny
        Allow from all
    </Directory>

</IfModule>
# End of aliases.

#
# Redirect allows you to tell clients about documents which used to exist in
# your server's namespace, but do not anymore. This allows you to tell the
# clients where to look for the relocated document.
# Format: Redirect old-URI new-URL
#

#
# Directives controlling the display of server-generated directory listings.
#
#### For Mac OS X Server: It's OK to modify the directives in this section,
#### but note that indexing is further controlled by the Server Settings application,
#### which adds a "FancyIndexing on/off" directive in the global scope and
#### also adds "Options +/-Indexes" in the virtual host scope in
#### httpd_macosxserver.conf.
#
<IfModule mod_autoindex.c>

    #
    # FancyIndexing is whether you want fancy directory indexing or standard
    #
    #### For Mac OS X Server: FancyIndexing is allowed here so it can be enabled
    #### or disabled on a per-virtual-host basis in httpd_macosxserver.conf.
    #
    IndexOptions FancyIndexing

    #
    # AddIcon* directives tell the server which icon to show for different
    # files or filename extensions.  These are only displayed for
    # FancyIndexed directories.
    #
    AddIconByEncoding (CMP,/icons/compressed.gif) x-compress x-gzip

    AddIconByType (TXT,/icons/text.gif) text/*
    AddIconByType (IMG,/icons/image2.gif) image/*
    AddIconByType (SND,/icons/sound2.gif) audio/*
    AddIconByType (VID,/icons/movie.gif) video/*

    AddIcon /icons/binary.gif .bin .exe
    AddIcon /icons/binhex.gif .hqx
    AddIcon /icons/tar.gif .tar
    AddIcon /icons/world2.gif .wrl .wrl.gz .vrml .vrm .iv
    AddIcon /icons/compressed.gif .Z .z .tgz .gz .zip
    AddIcon /icons/a.gif .ps .ai .eps
    AddIcon /icons/layout.gif .html .shtml .htm .pdf
    AddIcon /icons/text.gif .txt
    AddIcon /icons/c.gif .c
    AddIcon /icons/p.gif .pl .py
    AddIcon /icons/f.gif .for
    AddIcon /icons/dvi.gif .dvi
    AddIcon /icons/uuencoded.gif .uu
    AddIcon /icons/script.gif .conf .sh .shar .csh .ksh .tcl
    AddIcon /icons/tex.gif .tex
    AddIcon /icons/bomb.gif core

    AddIcon /icons/back.gif ..
    AddIcon /icons/hand.right.gif README
    AddIcon /icons/folder.gif ^^DIRECTORY^^
    AddIcon /icons/blank.gif ^^BLANKICON^^

    #
    # DefaultIcon is which icon to show for files which do not have an icon
    # explicitly set.
    #
    DefaultIcon /icons/unknown.gif

    #
    # AddDescription allows you to place a short description after a file in
    # server-generated indexes.  These are only displayed for FancyIndexed
    # directories.
    # Format: AddDescription "description" filename
    #
    #AddDescription "GZIP compressed document" .gz
    #AddDescription "tar archive" .tar
    #AddDescription "GZIP compressed tar archive" .tgz

    #
    # ReadmeName is the name of the README file the server will look for by
    # default, and append to directory listings.
    #
    # HeaderName is the name of a file which should be prepended to
    # directory indexes. 
    #
    # If MultiViews are amongst the Options in effect, the server will
    # first look for name.html and include it if found.  If name.html
    # doesn't exist, the server will then look for name.txt and include
    # it as plaintext if found.
    #
    ReadmeName README
    HeaderName HEADER

    #
    # IndexIgnore is a set of filenames which directory indexing should ignore
    # and not include in the listing.  Shell-style wildcarding is permitted.
    #
    IndexIgnore .??* *~ *# HEADER* README* RCS CVS *,v *,t

</IfModule>
# End of indexing directives.

#
# Document types.
#
<IfModule mod_mime.c>

    #### For Mac OS X Server: It's OK to modify some of the directives in
    #### in this section as needed, but do not uncomment the AddType and 
    #### AddHandler directives. Do not add any AddType or AddHandler directives
    #### here; those must reside in mime_macosxserver.types. Use the
    #### Server Settings application to modify those.
    #
    # AddEncoding allows you to have certain browsers (Mosaic/X 2.1+) uncompress
    # information on the fly. Note: Not all browsers support this.
    # Despite the name similarity, the following Add* directives have nothing
    # to do with the FancyIndexing customization directives above.
    #
    AddEncoding x-compress Z
    AddEncoding x-gzip gz tgz

    #
    # AddLanguage allows you to specify the language of a document. You can
    # then use content negotiation to give a browser a file in a language
    # it can understand.  
    #
    # Note 1: The suffix does not have to be the same as the language 
    # keyword --- those with documents in Polish (whose net-standard 
    # language code is pl) may wish to use "AddLanguage pl .po" to 
    # avoid the ambiguity with the common suffix for perl scripts.
    #
    # Note 2: The example entries below illustrate that in quite
    # some cases the two character 'Language' abbreviation is not
    # identical to the two character 'Country' code for its country,
    # E.g. 'Danmark/dk' versus 'Danish/da'.
    #
    # Note 3: In the case of 'ltz' we violate the RFC by using a three char 
    # specifier. But there is 'work in progress' to fix this and get 
    # the reference data for rfc1766 cleaned up.
    #
    # Danish (da) - Dutch (nl) - English (en) - Estonian (ee)
    # French (fr) - German (de) - Greek-Modern (el)
    # Italian (it) - Korean (kr) - Norwegian (no) - Norwegian Nynorsk (nn)
    # Portugese (pt) - Luxembourgeois* (ltz)
    # Spanish (es) - Swedish (sv) - Catalan (ca) - Czech(cz)
    # Polish (pl) - Brazilian Portuguese (pt-br) - Japanese (ja)
    # Russian (ru)
    #
    AddLanguage da .dk
    AddLanguage nl .nl
    AddLanguage en .en
    AddLanguage et .ee
    AddLanguage fr .fr
    AddLanguage de .de
    AddLanguage el .el
    AddLanguage he .he
    AddCharset ISO-8859-8 .iso8859-8
    AddLanguage it .it
    AddLanguage ja .ja
    AddCharset ISO-2022-JP .jis
    AddLanguage kr .kr
    AddCharset ISO-2022-KR .iso-kr
    AddLanguage nn .nn
    AddLanguage no .no
    AddLanguage pl .po
    AddCharset ISO-8859-2 .iso-pl
    AddLanguage pt .pt
    AddLanguage pt-br .pt-br
    AddLanguage ltz .lu
    AddLanguage ca .ca
    AddLanguage es .es
    AddLanguage sv .sv
    AddLanguage cz .cz
    AddLanguage ru .ru
    AddLanguage zh-tw .tw
    AddLanguage tw .tw
    AddCharset Big5         .Big5    .big5
    AddCharset WINDOWS-1251 .cp-1251
    AddCharset CP866        .cp866
    AddCharset ISO-8859-5   .iso-ru
    AddCharset KOI8-R       .koi8-r
    AddCharset UCS-2        .ucs2
    AddCharset UCS-4        .ucs4
    AddCharset UTF-8        .utf8

    # LanguagePriority allows you to give precedence to some languages
    # in case of a tie during content negotiation.
    #
    # Just list the languages in decreasing order of preference. We have
    # more or less alphabetized them here. You probably want to change this.
    #
    <IfModule mod_negotiation.c>
        LanguagePriority en da nl et fr de el it ja kr no pl pt pt-br ru ltz ca es sv tw
    </IfModule>

    #
    # AddType allows you to tweak mime.types without actually editing it, or to
    # make certain files to be certain types.
    #
    # For example, the PHP 3.x module (not part of the Apache distribution - see
    # http://www.php.net) will typically use:
    #
    #### For Mac OS X Server: Do not uncomment; this is already handled by
    #### Server Settings app, with directives in mime_macosxserver.conf
    #
    #AddType application/x-httpd-php3 .php3
    #AddType application/x-httpd-php3-source .phps
    #
    # And for PHP 4.x, use:
    #
    #### For Mac OS X Server: Do not uncomment; this is already handled by
    #### Server Settings app, with directives in mime_macosxserver.conf
    #
    #AddType application/x-httpd-php .php
    #AddType application/x-httpd-php-source .phps

    #### For Mac OS X Server: Do not uncomment; this is already handled by
    #### Server Settings app, with directives in mime_macosxserver.conf
    #
    #AddType application/x-tar .tgz

    #
    # AddHandler allows you to map certain file extensions to "handlers",
    # actions unrelated to filetype. These can be either built into the server
    # or added with the Action command (see below)
    #
    # If you want to use server side includes, or CGI outside
    # ScriptAliased directories, uncomment the following lines.
    #
    # To use CGI scripts:
    #
    #### For Mac OS X Server: Do not uncomment; this is already handled by
    #### Server Settings app, with directives in mime_macosxserver.conf
    #
    #AddHandler cgi-script .cgi

    #
    # To use server-parsed HTML files
    #
    #### For Mac OS X Server: Do not uncomment; this is already handled by
    #### Server Settings app, with directives in mime_macosxserver.conf
    #
    #AddType text/html .shtml
    #AddHandler server-parsed .shtml

    #
    # Uncomment the following line to enable Apache's send-asis HTTP file
    # feature
    #
    #### For Mac OS X Server: Do not uncomment; this is already handled by
    #### Server Settings app, with directives in mime_macosxserver.conf
    #
    #AddHandler send-as-is asis

    #
    # If you wish to use server-parsed imagemap files, use
    #
    #### For Mac OS X Server: Do not uncomment; this is already handled by
    #### Server Settings app, with directives in mime_macosxserver.conf
    #
    #AddHandler imap-file map

    #
    # To enable type maps, you might want to use
    #
    #### For Mac OS X Server: Do not uncomment; this is already handled by
    #### Server Settings app, with directives in mime_macosxserver.conf
    #
    #AddHandler type-map var

</IfModule>
# End of document types.

#
# Action lets you define media types that will execute a script whenever
# a matching file is called. This eliminates the need for repeated URL
# pathnames for oft-used CGI file processors.
# Format: Action media/type /cgi-script/location
# Format: Action handler-name /cgi-script/location
#

#
# MetaDir: specifies the name of the directory in which Apache can find
# meta information files. These files contain additional HTTP headers
# to include when sending the document
#
#### For Mac OS X Server: It's OK to modify this as needed.
#
#MetaDir .web

#
# MetaSuffix: specifies the file name suffix for the file containing the
# meta information.
#
#### For Mac OS X Server: It's OK to modify this as needed.
#
#MetaSuffix .meta

#
# Customizable error response (Apache style)
#
#### For Mac OS X Server: It's OK to add ErrorDocument directives as needed.
#
#  These come in three flavors
#
#    1) plain text
#ErrorDocument 500 "The server made a boo boo.
#  n.b.  the single leading (") marks it as text, it does not get output
#
#    2) local redirects
#ErrorDocument 404 /missing.html
#  to redirect to local URL /missing.html
#ErrorDocument 404 /cgi-bin/missing_handler.pl
#  N.B.: You can redirect to a script or a document using server-side-includes.
#
#    3) external redirects
#ErrorDocument 402 http://some.other-server.com/subscription_info.html
#  N.B.: Many of the environment variables associated with the original
#  request will *not* be available to such a script.

#
# Customize behaviour based on the browser
#
<IfModule mod_setenvif.c>

    #
    # The following directives modify normal HTTP response behavior.
    #
    #### For Mac OS X Server: It's OK to add BrowserMatch directives as needed.
    #
    
    # The first directive disables keepalive for Netscape 2.x and browsers that
    # spoof it. There are known problems with these browser implementations.
    # The second directive is for Microsoft Internet Explorer 4.0b2
    # which has a broken HTTP/1.1 implementation and does not properly
    # support keepalive when it is used on 301 or 302 (redirect) responses.
    #
    BrowserMatch "Mozilla/2" nokeepalive
    BrowserMatch "MSIE 4\.0b2;" nokeepalive downgrade-1.0 force-response-1.0

    #
    # The following directive disables HTTP/1.1 responses to browsers which
    # are in violation of the HTTP/1.0 spec by not being able to grok a
    # basic 1.1 response.
    #
    BrowserMatch "RealPlayer 4\.0" force-response-1.0
    BrowserMatch "Java/1\.0" force-response-1.0
    BrowserMatch "JDK/1\.0" force-response-1.0

</IfModule>
# End of browser customization directives

#
# Allow server status reports, with the URL of http://servername/server-status
# Change the ".your-domain.com" to match your domain to enable.
#
#### For Mac OS X Server: Any directives here will be overridden by the ones
#### in httpd_macosxserver.conf.
#
#<Location /server-status>
#    SetHandler server-status
#    Order deny,allow
#    Deny from all
#    Allow from .your-domain.com
#</Location>

#
# Allow remote server configuration reports, with the URL of
# http://servername/server-info (requires that mod_info.c be loaded).
# Change the ".your-domain.com" to match your domain to enable.
#
#### For Mac OS X Server: It's OK to modify this as needed.
#
#<Location /server-info>
#    SetHandler server-info
#    Order deny,allow
#    Deny from all
#    Allow from .your-domain.com
#</Location>

#
# There have been reports of people trying to abuse an old bug from pre-1.1
# days.  This bug involved a CGI script distributed as a part of Apache.
# By uncommenting these lines you can redirect these attacks to a logging 
# script on phf.apache.org.  Or, you can record them yourself, using the script
# support/phf_abuse_log.cgi.
#
#### For Mac OS X Server: No phf script is pre-installed, so this is not applicable.
#
#<Location /cgi-bin/phf*>
#    Deny from all
#    ErrorDocument 403 http://phf.apache.org/phf_abuse_log.cgi
#</Location>

#
# Proxy Server directives. Uncomment the following lines to
# enable the proxy server:
#
#### For Mac OS X Server: Some proxy directives are handled by Server Settings app
#### with settings stored in httpd_macosxserver.conf. The following directives
#### will be overridden: ProxyRequests, CacheRoot, CacheSize. It's OK to
#### adjust the other settings here as needed. If you add ProxyBlock directives
#### here, the ones in httpd_macosxserver.conf will be added to the list, but
#### mechanism to export proxyblock directives into a file will miss the ones
#### ones added here.
#
#<IfModule mod_proxy.c>
#    ProxyRequests On

#    <Directory proxy:*>
#        Order deny,allow
#        Deny from all
#        Allow from .your-domain.com
#    </Directory>

    #
    # Enable/disable the handling of HTTP/1.1 "Via:" headers.
    # ("Full" adds the server version; "Block" removes all outgoing Via: headers)
    # Set to one of: Off | On | Full | Block
    #
#    ProxyVia On

    #
    # To enable the cache as well, edit and uncomment the following lines:
    # (no caching without CacheRoot)
    #
    #### For Mac OS X Server: CacheRoot, CacheSize, and CacheGcInterval directives
    #### here will be overridden bydirectives in httpd_macosxserver.conf managed 
    #### by Server Settings app.
    #
    #CacheRoot "/private/var/run/proxy"
    #CacheSize 5
    #CacheGcInterval 4
    #CacheMaxExpire 24
    #CacheLastModifiedFactor 0.1
    #CacheDefaultExpire 1
    #NoCache a_domain.com another_domain.edu joes.garage_sale.com

#</IfModule>
# End of proxy directives.

### Section 3: Virtual Hosts
#
#### For Mac OS X Server virtual hosts are managed by the Server Setting app
#### and serversettingsd process, which store the configuration in
#### httpd_macosxserver.conf, so there's no reason to use the NameVirtualHost
#### directive or <VirtualHost> block here.
#
# VirtualHost: If you want to maintain multiple domains/hostnames on your
# machine you can setup VirtualHost containers for them. Most configurations
# use only name-based virtual hosts so the server doesn't need to worry about
# IP addresses. This is indicated by the asterisks in the directives below.
#
# Please see the documentation at <URL:http://www.apache.org/docs/vhosts/>
# for further details before you try to setup virtual hosts.
#
# You may use the command line option '-S' to verify your virtual host
# configuration.

#
# Use name-based virtual hosting.
#
#NameVirtualHost *

#
# VirtualHost example:
# Almost any Apache directive may go into a VirtualHost container.
# The first VirtualHost section is used for requests without a known
# server name.
#
#<VirtualHost *>
#    ServerAdmin webmaster@dummy-host.example.com
#    DocumentRoot /www/docs/dummy-host.example.com
#    ServerName dummy-host.example.com
#    ErrorLog logs/dummy-host.example.com-error_log
#    CustomLog logs/dummy-host.example.com-access_log common
#</VirtualHost>


#### For Mac OS X Server: Personal File Sharing User Configuration is not
#### supported.
#
#Include /private/etc/httpd/users


#### Remaining sections are all specific to Mac OS X Server
####
#### Directives below can be modified by "hand". httpd_macosxserver.conf
#### and mime_macosxserver.types, though, cannot be modified by hand
#### since they get updated programmatically by serversettingsd. In addition
#### configuration files located in /private/etc/httpd/users should not 
#### be edited. To enable WebDAV on user directories, create a single
#### site pointing to "/Users" and add realms for "/Users/u1/Sites/",
#### "/Users/u2/Sites/", etc., using users "u1" or "u2" (those are just
#### examples) for authentication. Do not forget that WebDAV will work
#### only if the files/folders it accesses are read/writable by www.
#### Refer to the documentation for more details.

#### Do not remove or comment these lines
#
Include /private/etc/httpd/httpd_macosxserver.conf
Include /private/etc/httpd/mime_macosxserver.types


#### Section 4: Cache configuration
#
## This is specific to Mac OS X Server.
#### It's OK to modify as needed.
####
#### mod_expire is configured so that all static files but images
#### expire after 60 seconds. Any response that has a life span of more
#### than 5 seconds (see webperfcache.conf) will be cached by webperfcache.
#### Make sure your CGIs return a "Cache-Control: no-cache" header if you
#### elect to make your dynamically generated HTML pages not cache-able.
#### If all your HTML pages are static you may also increase ExpiresDefault.

<IfModule mod_expires.c>
ExpiresActive on
ExpiresDefault A60
ExpiresByType image/bmp A3600
ExpiresByType image/gif A3600
ExpiresByType image/ief A3600
ExpiresByType image/jpeg A3600
ExpiresByType image/png A3600
ExpiresByType image/tiff A3600
ExpiresByType image/x-cmu-raster A3600
ExpiresByType image/x-portable-anymap A3600
ExpiresByType image/x-portable-bitmap A3600
ExpiresByType image/x-portable-graymap A3600
ExpiresByType image/x-portable-pixmap A3600
ExpiresByType image/x-rgb  A3600
ExpiresByType image/x-xbitmap A3600
ExpiresByType image/x-xpixmap A3600
ExpiresByType image/x-xwindowdump A3600
ExpiresByType audio/basic A3600
ExpiresByType audio/midi A3600
ExpiresByType audio/mpeg A3600
ExpiresByType audio/x-aiff A3600
ExpiresByType audio/x-pn-realaudio A3600
ExpiresByType audio/x-pn-realaudio-plugin A3600
ExpiresByType audio/x-realaudio A3600
ExpiresByType audio/x-wav A3600
ExpiresByType video/mpeg A3600
ExpiresByType video/quicktime A3600
ExpiresByType video/x-msvideo A3600
ExpiresByType video/x-sgi-movie A3600
</IfModule>


#### Section 5: HFS case-sensitivity configuration
#
#### This is specific to Mac OS X Server.
#### It's OK to modify as needed.
####
#### Comment the following lines to disable mod_hfs_apple. If your
#### web sites are hosted on HFS or HFS+ volumes (case-insensitive
#### file systems) then you MUST install this module (it is per default).
#### Though Apache assumes case-sensitivity, this module enforces case
#### sensitivity for files residing on HFS volumes but only when
#### necessary, that is, when a security hole would appear. Typically,
#### this would happen when a "<Directory /path/to/folder>" directive
#### is set on a path that resides on a HFS volume. Indeed, Apache walks
#### through this kind of directive when parsing a URL but it always does
#### it doing case-sensitive matches. This module returns an error if
#### an URL is mis-cased so such "<Directory>" directive would always
#### apply. Note that mod_hfs_apple may not work for paths that contain 
#### a mix of UFS and HFS share points.

LoadModule hfs_apple_module /usr/libexec/httpd/mod_hfs_apple.so
AddModule mod_hfs_apple.c


#### Section 6: ACGI server configuration
####
#### This is specific to Mac OS X Server.
#### It's OK to modify as needed.
#
#### In order for ACGI to operate:
####    The following directives must be uncommented
####    The "AddHandler redirect-acgi acgi" directive in mime_macosxserver.types
####      must not be deleted
####    The ACGI Enabler application must be running on the server
####    The acgid daemon must be running under control of the ACGIEnabler
#### This will not work for headless configurations, as there is no way to
#### log in and launch the ACGI Enabler application.

LoadModule apple_redirectacgi_module /usr/libexec/httpd/mod_redirectacgi_apple.so
AddModule mod_redirectacgi_apple.c
<IfModule mod_redirectacgi_apple.c>
RedirectACGI On
RedirectACGIPort 9008
</IfModule>


#### Section 7: MacBinary configuration
#
#### This is specific to Mac OS X Server.
#### It's OK to modify as needed.
####
#### The mod_macbinary_apple module allows a browser to download any
#### file as a MacBinary-encoded file by appending .bin to the URL.
#### For security reasons, administrators may want to prevent this
#### for files with certain suffixes. The MacBinaryBlock directive
#### prevents the MacBinary download of files with the specified
#### suffixes.
#
<IfModule mod_macbinary_apple.c>
MacBinary On
MacBinaryBlock html shtml perl pl cgi acgi jsp php phps asp scpt
MacBinaryBlock htaccess 
</IfModule>

#### For Mac OS X Server: Starting with version 10.2 of Mac OS X Server,
#### Tomcat is enabled via directives in httpd_macosxserver.conf, managed
#### by the Server Settings application. There is no need to add Tomcat
#### directives to this file.
####


# Including WebObjects Configs
Include /System/Library/WebObjects/Adaptors/Apache/apache.conf

