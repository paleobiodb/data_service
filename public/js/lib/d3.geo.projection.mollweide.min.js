!function(){function t(t,r){return{type:"Feature",id:t.id,properties:t.properties,geometry:n(t.geometry,r)}}function n(t,r){if(!t)return null;if("GeometryCollection"===t.type)return{type:"GeometryCollection",geometries:object.geometries.map(function(t){return n(t,r)})};if(!g.hasOwnProperty(t.type))return null;var e=g[t.type];return d3.geo.stream(t,r(e)),e.result()}function r(){}function e(t){if((n=t.length)<4)return!1;for(var n,r=0,e=t[n-1][1]*t[0][0]-t[n-1][0]*t[0][1];++r<n;)e+=t[r-1][1]*t[r][0]-t[r-1][0]*t[r][1];return 0>=e}function o(t,n){for(var r=n[0],e=n[1],o=!1,u=0,i=t.length,a=i-1;i>u;a=u++){var c=t[u],l=c[0],f=c[1],p=t[a],s=p[0],h=p[1];f>e^h>e&&(s-l)*(e-f)/(h-f)+l>r&&(o=!o)}return o}function u(t){return t>1?y/2:-1>t?-y/2:Math.asin(t)}function i(t){return function(n){var r,e=t*Math.sin(n),o=30;do n-=r=(n+Math.sin(n)-e)/(1+Math.cos(n));while(Math.abs(r)>v&&--o>0);return n/2}}function a(t,n,r){function e(r,e){return[t*r*Math.cos(e=o(e)),n*Math.sin(e)]}var o=i(r);return e.invert=function(e,o){var i=u(o/n);return[e/(t*Math.cos(i)),u((2*i+Math.sin(2*i))/r)]},e}d3.geo.project=function(t,r){var e=r.stream;if(!e)throw new Error("not yet supported");return(t&&c.hasOwnProperty(t.type)?c[t.type]:n)(t,e)};var c={Feature:t,FeatureCollection:function(n,r){return{type:"FeatureCollection",features:n.features.map(function(n){return t(n,r)})}}},l=[],f=[],p={point:function(t,n){l.push([t,n])},result:function(){var t=l.length?l.length<2?{type:"Point",coordinates:l[0]}:{type:"MultiPoint",coordinates:l}:null;return l=[],t}},s={lineStart:r,point:function(t,n){l.push([t,n])},lineEnd:function(){l.length&&(f.push(l),l=[])},result:function(){var t=f.length?f.length<2?{type:"LineString",coordinates:f[0]}:{type:"MultiLineString",coordinates:f}:null;return f=[],t}},h={polygonStart:r,lineStart:r,point:function(t,n){l.push([t,n])},lineEnd:function(){var t=l.length;if(t){do l.push(l[0].slice());while(++t<4);f.push(l),l=[]}},polygonEnd:r,result:function(){if(!f.length)return null;var t=[],n=[];return f.forEach(function(r){e(r)?t.push([r]):n.push(r)}),n.forEach(function(n){var r=n[0];t.some(function(t){return o(t[0],r)?(t.push(n),!0):void 0})||t.push([n])}),f=[],t.length?t.length>1?{type:"MultiPolygon",coordinates:t}:{type:"Polygon",coordinates:t[0]}:null}},g={Point:p,MultiPoint:p,LineString:s,MultiLineString:s,Polygon:h,MultiPolygon:h},v=1e-6,y=Math.PI;Math.sqrt(y);var d=d3.geo.projection;d3.geo.projectionMutator,d3.geo.interrupt=function(t){function n(n,r){for(var e=0>r?-1:1,o=a[+(0>r)],u=0,i=o.length-1;i>u&&n>o[u][2][0];++u);var c=t(n-o[u][1][0],r);return c[0]+=t(o[u][1][0],e*r>e*o[u][0][1]?o[u][0][1]:r)[0],c}function r(){i=a.map(function(n){return n.map(function(n){var r,e=t(n[0][0],n[0][1])[0],o=t(n[2][0],n[2][1])[0],u=t(n[1][0],n[0][1])[1],i=t(n[1][0],n[1][1])[1];return u>i&&(r=u,u=i,i=r),[[e,u],[o,i]]})})}function e(){for(var t=1e-6,n=[],r=0,e=a[0].length;e>r;++r){var u=a[0][r],i=180*u[0][0]/y,c=180*u[0][1]/y,l=180*u[1][1]/y,f=180*u[2][0]/y,p=180*u[2][1]/y;n.push(o([[i+t,c+t],[i+t,l-t],[f-t,l-t],[f-t,p+t]],30))}for(var r=a[1].length-1;r>=0;--r){var u=a[1][r],i=180*u[0][0]/y,c=180*u[0][1]/y,l=180*u[1][1]/y,f=180*u[2][0]/y,p=180*u[2][1]/y;n.push(o([[f-t,p-t],[f-t,l+t],[i+t,l+t],[i+t,c-t]],30))}return{type:"Polygon",coordinates:[d3.merge(n)]}}function o(t,n){for(var r,e,o,u=-1,i=t.length,a=t[0],c=[];++u<i;){r=t[u],e=(r[0]-a[0])/n,o=(r[1]-a[1])/n;for(var l=0;n>l;++l)c.push([a[0]+l*e,a[1]+l*o]);a=r}return c.push(r),c}function u(t,n){return Math.abs(t[0]-n[0])<v&&Math.abs(t[1]-n[1])<v}var i,a=[[[[-y,0],[0,y/2],[y,0]]],[[[-y,0],[0,-y/2],[y,0]]]];t.invert&&(n.invert=function(r,e){for(var o=i[+(0>e)],c=a[+(0>e)],l=0,f=o.length;f>l;++l){var p=o[l];if(p[0][0]<=r&&r<p[1][0]&&p[0][1]<=e&&e<p[1][1]){var s=t.invert(r-t(c[l][1][0],0)[0],e);return s[0]+=c[l][1][0],u(n(s[0],s[1]),[r,e])?s:null}}});var c=d3.geo.projection(n),l=c.stream;return c.stream=function(t){var n=c.rotate(),r=l(t),o=(c.rotate([0,0]),l(t));return c.rotate(n),r.sphere=function(){d3.geo.stream(e(),o)},r},c.lobes=function(t){return arguments.length?(a=t.map(function(t){return t.map(function(t){return[[t[0][0]*y/180,t[0][1]*y/180],[t[1][0]*y/180,t[1][1]*y/180],[t[2][0]*y/180,t[2][1]*y/180]]})}),r(),c):a.map(function(t){return t.map(function(t){return[[180*t[0][0]/y,180*t[0][1]/y],[180*t[1][0]/y,180*t[1][1]/y],[180*t[2][0]/y,180*t[2][1]/y]]})})},c};var m=(i(y),a(2*Math.SQRT2/y,Math.SQRT2,y));(d3.geo.mollweide=function(){return d(m)}).raw=m}();